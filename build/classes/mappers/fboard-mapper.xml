<?xml version="1.0" encoding="UTF-8"?>
<!-- 이 문서는 MyBatis에서 처리할 SQL문을 작성하는 문서입니다. -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	<mapper>태그의 namespace 속성값은 이 문서에 작성된 SQL문을 호출할 때
	같이 사용되는 이름이다.
 -->
 
<mapper namespace="fboard">

	<!-- 공지사항 검색 및 페이징 -->
	<select id="noticeSearch" resultType="NoticeVO" parameterType="map">
	  <![CDATA[
	    SELECT * FROM (
	      SELECT ROWNUM rnum, n.*
	      FROM (
	        SELECT *
	        FROM fboard
	        WHERE ntitle LIKE '%' || #{nSearch} || '%' OR ncontent LIKE '%' || #{nSearch} || '%'
	        ORDER BY nno DESC
	      ) n
	    ) 
	    WHERE rnum BETWEEN #{start} AND #{end}
	  ]]>
	</select>
  
	<!-- 공지사항 검색 결과의 총 개수 조회 -->
	<select id="getSearchCount" resultType="int" parameterType="map">
	  <![CDATA[
	    SELECT COUNT(*) 
	    FROM (
	      SELECT ROWNUM rnum, n.*
	      FROM (
	        SELECT *
	        FROM fboard
	        WHERE ntitle LIKE '%' || #{nSearch} || '%' OR ncontent LIKE '%' || #{nSearch} || '%'
	        ORDER BY nno DESC
	      ) n
	    )
	  ]]>
	</select>
  
	<!-- 공지사항 총 글 개수 조회 -->
	 <select id="getBoardCount" resultType="int">
	   SELECT COUNT(*) FROM fboard
	 </select>
	 
	<!-- 공지사항 목록 조회 -->
	<select id="noticeList" resultType="NoticeVO" parameterType="map">
	  <![CDATA[
	    SELECT * FROM (
	      SELECT ROWNUM rnum, n.*
	      FROM (
	        SELECT * 
	        FROM fboard
	        ORDER BY nno DESC
	      ) n
	    )
	    WHERE rnum BETWEEN #{start} AND #{end}
	  ]]>
	</select>
	
	<!-- 공지사항 상세 페이지 정보 조회 -->
	<select id="noticeDetail" resultType="NoticeVO" parameterType="int">
	  SELECT * FROM fboard WHERE nno = #{nno}
	</select>
	
	<!-- 공지사항 글 작성 - MAX 값을 사용 -->
	<insert id="noticeWrite" parameterType="NoticeVO">
	  INSERT INTO fboard (nno, mid, ntitle, ndate, ncontent, nview)
	  VALUES ((SELECT MAX(nno) + 1 FROM fboard), #{mid}, #{ntitle}, SYSTIMESTAMP, #{ncontent}, 0)
	</insert>
	
	<!-- 공지사항 글 수정 -->
	<update id="noticeUpdate" parameterType="NoticeVO">
	  UPDATE fboard
	  SET ntitle = #{ntitle}, ncontent = #{ncontent}
	  WHERE nno = #{nno}
	</update>		

	<!-- 공지사항 글 삭제 -->
	<delete id="noticeDelete" parameterType="int">
	  DELETE FROM fboard
	  WHERE nno = #{nno}
	</delete>

	<!-- 공지사항 조회수 증가 -->
	<update id="viewCount" parameterType="int">
	  UPDATE fboard
	  SET nview = nview + 1
	  WHERE nno = #{nno}
	</update>

	<!-- 공지사항 댓글 작성  -->
	<insert id="replyWrite" parameterType="NoticeVO">
	  INSERT INTO fboardreply (rno,nno, mid, ntitle, ndate, ncontent, nview)
	  VALUES (freply_seq.nextval,#{nno}, #{mid}, #{ntitle}, SYSTIMESTAMP, #{ncontent}, 0)
	</insert>
	
	<!-- 공지사항 댓글 조회 -->
	<select id="getReply" parameterType="ReplyVO" resultType="ReplyVO">
	 SELECT *  FROM fboardreply where nno = #{nno} order by rno desc
	</select>

	<!-- 공지사항 댓글 삭제  -->
	<delete id="replyDelete" parameterType="ReplyVO" >
		delete from fboardreply where rno = #{rno}
	</delete>

	<!-- 공지사항 댓글 읽기  -->	
	<select id="getReplyOne" parameterType="ReplyVO" resultType="ReplyVO">
	 SELECT *  FROM fboardreply where rno = #{rno}
	</select>
	
	<!-- 공지사항 댓글 수정 -->
	<update id="replyUpdate" parameterType="ReplyVO">
	  UPDATE fboardreply
	  SET ncontent = #{ncontent} , ndate = sysdate
	  WHERE rno = #{rno}
	</update>	
	
	<!-- 공지사항 댓글수 조회  -->
	<select id="getReplyCnt" parameterType="ReplyVO" resultType="ReplyVO">
	 SELECT count(*)  FROM fboardreply where nno = #{nno}
	</select>	

</mapper>